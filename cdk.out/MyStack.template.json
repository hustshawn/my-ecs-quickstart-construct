{
 "Resources": {
  "MyEcsvpcBA534860": {
   "Type": "AWS::EC2::VPC",
   "Properties": {
    "CidrBlock": "10.0.0.0/16",
    "EnableDnsHostnames": true,
    "EnableDnsSupport": true,
    "InstanceTenancy": "default",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyStack/MyEcs/vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/Resource"
   }
  },
  "MyEcsvpcPublicSubnet1Subnet6682D680": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.0.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MyStack/MyEcs/vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyEcsvpcBA534860"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PublicSubnet1/Subnet"
   }
  },
  "MyEcsvpcPublicSubnet1RouteTable98382F33": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyStack/MyEcs/vpc/PublicSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyEcsvpcBA534860"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PublicSubnet1/RouteTable"
   }
  },
  "MyEcsvpcPublicSubnet1RouteTableAssociation887B33FF": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyEcsvpcPublicSubnet1RouteTable98382F33"
    },
    "SubnetId": {
     "Ref": "MyEcsvpcPublicSubnet1Subnet6682D680"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PublicSubnet1/RouteTableAssociation"
   }
  },
  "MyEcsvpcPublicSubnet1DefaultRoute02124361": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyEcsvpcIGW0A0337DE"
    },
    "RouteTableId": {
     "Ref": "MyEcsvpcPublicSubnet1RouteTable98382F33"
    }
   },
   "DependsOn": [
    "MyEcsvpcVPCGW34FFC593"
   ],
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PublicSubnet1/DefaultRoute"
   }
  },
  "MyEcsvpcPublicSubnet1EIPCBB9A0AF": {
   "Type": "AWS::EC2::EIP",
   "Properties": {
    "Domain": "vpc",
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyStack/MyEcs/vpc/PublicSubnet1"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PublicSubnet1/EIP"
   }
  },
  "MyEcsvpcPublicSubnet1NATGateway6F0A196C": {
   "Type": "AWS::EC2::NatGateway",
   "Properties": {
    "AllocationId": {
     "Fn::GetAtt": [
      "MyEcsvpcPublicSubnet1EIPCBB9A0AF",
      "AllocationId"
     ]
    },
    "SubnetId": {
     "Ref": "MyEcsvpcPublicSubnet1Subnet6682D680"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyStack/MyEcs/vpc/PublicSubnet1"
     }
    ]
   },
   "DependsOn": [
    "MyEcsvpcPublicSubnet1DefaultRoute02124361",
    "MyEcsvpcPublicSubnet1RouteTableAssociation887B33FF"
   ],
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PublicSubnet1/NATGateway"
   }
  },
  "MyEcsvpcPublicSubnet2Subnet909DE44C": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.64.0/18",
    "MapPublicIpOnLaunch": true,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Public"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Public"
     },
     {
      "Key": "Name",
      "Value": "MyStack/MyEcs/vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyEcsvpcBA534860"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PublicSubnet2/Subnet"
   }
  },
  "MyEcsvpcPublicSubnet2RouteTable6A9108CC": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyStack/MyEcs/vpc/PublicSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyEcsvpcBA534860"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PublicSubnet2/RouteTable"
   }
  },
  "MyEcsvpcPublicSubnet2RouteTableAssociationD47EE193": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyEcsvpcPublicSubnet2RouteTable6A9108CC"
    },
    "SubnetId": {
     "Ref": "MyEcsvpcPublicSubnet2Subnet909DE44C"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PublicSubnet2/RouteTableAssociation"
   }
  },
  "MyEcsvpcPublicSubnet2DefaultRoute27CE5F20": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "GatewayId": {
     "Ref": "MyEcsvpcIGW0A0337DE"
    },
    "RouteTableId": {
     "Ref": "MyEcsvpcPublicSubnet2RouteTable6A9108CC"
    }
   },
   "DependsOn": [
    "MyEcsvpcVPCGW34FFC593"
   ],
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PublicSubnet2/DefaultRoute"
   }
  },
  "MyEcsvpcPrivateSubnet1SubnetA5D8B8D2": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      0,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.128.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MyStack/MyEcs/vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyEcsvpcBA534860"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PrivateSubnet1/Subnet"
   }
  },
  "MyEcsvpcPrivateSubnet1RouteTable3BCDD26B": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyStack/MyEcs/vpc/PrivateSubnet1"
     }
    ],
    "VpcId": {
     "Ref": "MyEcsvpcBA534860"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PrivateSubnet1/RouteTable"
   }
  },
  "MyEcsvpcPrivateSubnet1RouteTableAssociation53CF163B": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyEcsvpcPrivateSubnet1RouteTable3BCDD26B"
    },
    "SubnetId": {
     "Ref": "MyEcsvpcPrivateSubnet1SubnetA5D8B8D2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PrivateSubnet1/RouteTableAssociation"
   }
  },
  "MyEcsvpcPrivateSubnet1DefaultRoute75EB1213": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MyEcsvpcPublicSubnet1NATGateway6F0A196C"
    },
    "RouteTableId": {
     "Ref": "MyEcsvpcPrivateSubnet1RouteTable3BCDD26B"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PrivateSubnet1/DefaultRoute"
   }
  },
  "MyEcsvpcPrivateSubnet2Subnet0BADFA4F": {
   "Type": "AWS::EC2::Subnet",
   "Properties": {
    "AvailabilityZone": {
     "Fn::Select": [
      1,
      {
       "Fn::GetAZs": ""
      }
     ]
    },
    "CidrBlock": "10.0.192.0/18",
    "MapPublicIpOnLaunch": false,
    "Tags": [
     {
      "Key": "aws-cdk:subnet-name",
      "Value": "Private"
     },
     {
      "Key": "aws-cdk:subnet-type",
      "Value": "Private"
     },
     {
      "Key": "Name",
      "Value": "MyStack/MyEcs/vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyEcsvpcBA534860"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PrivateSubnet2/Subnet"
   }
  },
  "MyEcsvpcPrivateSubnet2RouteTable9471C98A": {
   "Type": "AWS::EC2::RouteTable",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyStack/MyEcs/vpc/PrivateSubnet2"
     }
    ],
    "VpcId": {
     "Ref": "MyEcsvpcBA534860"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PrivateSubnet2/RouteTable"
   }
  },
  "MyEcsvpcPrivateSubnet2RouteTableAssociation0512FA33": {
   "Type": "AWS::EC2::SubnetRouteTableAssociation",
   "Properties": {
    "RouteTableId": {
     "Ref": "MyEcsvpcPrivateSubnet2RouteTable9471C98A"
    },
    "SubnetId": {
     "Ref": "MyEcsvpcPrivateSubnet2Subnet0BADFA4F"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PrivateSubnet2/RouteTableAssociation"
   }
  },
  "MyEcsvpcPrivateSubnet2DefaultRoute56161911": {
   "Type": "AWS::EC2::Route",
   "Properties": {
    "DestinationCidrBlock": "0.0.0.0/0",
    "NatGatewayId": {
     "Ref": "MyEcsvpcPublicSubnet1NATGateway6F0A196C"
    },
    "RouteTableId": {
     "Ref": "MyEcsvpcPrivateSubnet2RouteTable9471C98A"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/PrivateSubnet2/DefaultRoute"
   }
  },
  "MyEcsvpcIGW0A0337DE": {
   "Type": "AWS::EC2::InternetGateway",
   "Properties": {
    "Tags": [
     {
      "Key": "Name",
      "Value": "MyStack/MyEcs/vpc"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/IGW"
   }
  },
  "MyEcsvpcVPCGW34FFC593": {
   "Type": "AWS::EC2::VPCGatewayAttachment",
   "Properties": {
    "InternetGatewayId": {
     "Ref": "MyEcsvpcIGW0A0337DE"
    },
    "VpcId": {
     "Ref": "MyEcsvpcBA534860"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/vpc/VPCGW"
   }
  },
  "MyEcsServiceLBA41CFDC3": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "MyEcsServiceLBSecurityGroupCA7B46A0",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Ref": "MyEcsvpcPublicSubnet1Subnet6682D680"
     },
     {
      "Ref": "MyEcsvpcPublicSubnet2Subnet909DE44C"
     }
    ],
    "Type": "application"
   },
   "DependsOn": [
    "MyEcsvpcPublicSubnet1DefaultRoute02124361",
    "MyEcsvpcPublicSubnet1RouteTableAssociation887B33FF",
    "MyEcsvpcPublicSubnet2DefaultRoute27CE5F20",
    "MyEcsvpcPublicSubnet2RouteTableAssociationD47EE193"
   ],
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/Service/LB/Resource"
   }
  },
  "MyEcsServiceLBSecurityGroupCA7B46A0": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB MyStackMyEcsServiceLB8E50D9C5",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Ref": "MyEcsvpcBA534860"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/Service/LB/SecurityGroup/Resource"
   }
  },
  "MyEcsServiceLBSecurityGrouptoMyStackMyEcsServiceSecurityGroupA07C1288806EFCA631": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "Load balancer to target",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "MyEcsServiceSecurityGroupC238E744",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "MyEcsServiceLBSecurityGroupCA7B46A0",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/Service/LB/SecurityGroup/to MyStackMyEcsServiceSecurityGroupA07C1288:80"
   }
  },
  "MyEcsServiceLBPublicListener5C239652": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "MyEcsServiceLBPublicListenerECSGroup7E0C12ED"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "MyEcsServiceLBA41CFDC3"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/Service/LB/PublicListener/Resource"
   }
  },
  "MyEcsServiceLBPublicListenerECSGroup7E0C12ED": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "ip",
    "VpcId": {
     "Ref": "MyEcsvpcBA534860"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/Service/LB/PublicListener/ECSGroup/Resource"
   }
  },
  "MyEcsServiceTaskDefTaskRole51C0BBD5": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/Service/TaskDef/TaskRole/Resource"
   }
  },
  "MyEcsServiceTaskDefE62F59D9": {
   "Type": "AWS::ECS::TaskDefinition",
   "Properties": {
    "ContainerDefinitions": [
     {
      "Essential": true,
      "Image": "nginx",
      "LogConfiguration": {
       "LogDriver": "awslogs",
       "Options": {
        "awslogs-group": {
         "Ref": "MyEcsServiceTaskDefwebLogGroup857FEC0E"
        },
        "awslogs-stream-prefix": "Service",
        "awslogs-region": {
         "Ref": "AWS::Region"
        }
       }
      },
      "Name": "web",
      "PortMappings": [
       {
        "ContainerPort": 80,
        "Protocol": "tcp"
       }
      ]
     }
    ],
    "Cpu": "256",
    "ExecutionRoleArn": {
     "Fn::GetAtt": [
      "MyEcsServiceTaskDefExecutionRole32F22841",
      "Arn"
     ]
    },
    "Family": "MyStackMyEcsServiceTaskDefD523B3F5",
    "Memory": "512",
    "NetworkMode": "awsvpc",
    "RequiresCompatibilities": [
     "FARGATE"
    ],
    "TaskRoleArn": {
     "Fn::GetAtt": [
      "MyEcsServiceTaskDefTaskRole51C0BBD5",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/Service/TaskDef/Resource"
   }
  },
  "MyEcsServiceTaskDefwebLogGroup857FEC0E": {
   "Type": "AWS::Logs::LogGroup",
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/Service/TaskDef/web/LogGroup/Resource"
   }
  },
  "MyEcsServiceTaskDefExecutionRole32F22841": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ecs-tasks.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/Service/TaskDef/ExecutionRole/Resource"
   }
  },
  "MyEcsServiceTaskDefExecutionRoleDefaultPolicy981F02A3": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": {
        "Fn::GetAtt": [
         "MyEcsServiceTaskDefwebLogGroup857FEC0E",
         "Arn"
        ]
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "MyEcsServiceTaskDefExecutionRoleDefaultPolicy981F02A3",
    "Roles": [
     {
      "Ref": "MyEcsServiceTaskDefExecutionRole32F22841"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/Service/TaskDef/ExecutionRole/DefaultPolicy/Resource"
   }
  },
  "MyEcsService281B38A2": {
   "Type": "AWS::ECS::Service",
   "Properties": {
    "Cluster": {
     "Ref": "EcsDefaultClusterMnL3mNNYNvpcFC68BC3A"
    },
    "DeploymentConfiguration": {
     "Alarms": {
      "AlarmNames": [],
      "Enable": false,
      "Rollback": false
     },
     "MaximumPercent": 200,
     "MinimumHealthyPercent": 50
    },
    "EnableECSManagedTags": false,
    "HealthCheckGracePeriodSeconds": 60,
    "LaunchType": "FARGATE",
    "LoadBalancers": [
     {
      "ContainerName": "web",
      "ContainerPort": 80,
      "TargetGroupArn": {
       "Ref": "MyEcsServiceLBPublicListenerECSGroup7E0C12ED"
      }
     }
    ],
    "NetworkConfiguration": {
     "AwsvpcConfiguration": {
      "AssignPublicIp": "DISABLED",
      "SecurityGroups": [
       {
        "Fn::GetAtt": [
         "MyEcsServiceSecurityGroupC238E744",
         "GroupId"
        ]
       }
      ],
      "Subnets": [
       {
        "Ref": "MyEcsvpcPrivateSubnet1SubnetA5D8B8D2"
       },
       {
        "Ref": "MyEcsvpcPrivateSubnet2Subnet0BADFA4F"
       }
      ]
     }
    },
    "TaskDefinition": {
     "Ref": "MyEcsServiceTaskDefE62F59D9"
    }
   },
   "DependsOn": [
    "MyEcsServiceLBPublicListenerECSGroup7E0C12ED",
    "MyEcsServiceLBPublicListener5C239652",
    "MyEcsServiceTaskDefTaskRole51C0BBD5"
   ],
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/Service/Service/Service"
   }
  },
  "MyEcsServiceSecurityGroupC238E744": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "MyStack/MyEcs/Service/Service/SecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": {
     "Ref": "MyEcsvpcBA534860"
    }
   },
   "DependsOn": [
    "MyEcsServiceTaskDefTaskRole51C0BBD5"
   ],
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/Service/Service/SecurityGroup/Resource"
   }
  },
  "MyEcsServiceSecurityGroupfromMyStackMyEcsServiceLBSecurityGroupBA6201DE806E9470C4": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Load balancer to target",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "MyEcsServiceSecurityGroupC238E744",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "MyEcsServiceLBSecurityGroupCA7B46A0",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "DependsOn": [
    "MyEcsServiceTaskDefTaskRole51C0BBD5"
   ],
   "Metadata": {
    "aws:cdk:path": "MyStack/MyEcs/Service/Service/SecurityGroup/from MyStackMyEcsServiceLBSecurityGroupBA6201DE:80"
   }
  },
  "EcsDefaultClusterMnL3mNNYNvpcFC68BC3A": {
   "Type": "AWS::ECS::Cluster",
   "Metadata": {
    "aws:cdk:path": "MyStack/EcsDefaultClusterMnL3mNNYNvpc/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/32STW/CMAyGfwv3kK1oh+3IGENIaKsK4orS1HSGkFT5KEJV//vStIWOTTv59Rs3fux0QqPoiUYjdjZjnh3HAlNarS3jR+KtXQV8QqttwclsL7fxjMQuFcjXLpVgG++mEuUsbFgq4ObfvKkxiiOzqOS1uBHzZdyED2YXzMKZXUissfTydvFSWtBe9wUtSZdNrWf9OoG0ZA3cabSXhVauCAz/GvNcgzG/7KUMfk2Am13BbNPb0GlR+LED/kqx7JUJJjlk70znDSvoEjkQEMxY5MJXpKECZV76/f39tW56/8iHdWgsyK6m14Pzje/sV9JPNkgDOa06tA0zxzfYo8R+9feOkpahv33g3Y0VVtRJ4TxLoOpkTZCdaJWo9t1DjJXHDA/VqpoIlXumlcqvxL2ua5KAUU63jT6dLVz7Pw1cD5kFtJpIlQE9mIcyeqbRC30cHQziWDtp8QQ0aeM3UvGsK9YCAAA="
   },
   "Metadata": {
    "aws:cdk:path": "MyStack/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Outputs": {
  "MyEcsServiceLoadBalancerDNS4A3F23C2": {
   "Value": {
    "Fn::GetAtt": [
     "MyEcsServiceLBA41CFDC3",
     "DNSName"
    ]
   }
  },
  "MyEcsServiceServiceURL43D3A8FE": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "http://",
      {
       "Fn::GetAtt": [
        "MyEcsServiceLBA41CFDC3",
        "DNSName"
       ]
      }
     ]
    ]
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}